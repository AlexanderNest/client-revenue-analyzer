package ru.nesterov.bot.handlers.implementation.invocable.stateful.getClientStatisticHandler;

import lombok.SneakyThrows;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.methods.BotApiMethod;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;
import ru.nesterov.bot.dto.GetActiveClientResponse;
import ru.nesterov.bot.dto.GetClientStatisticRequest;
import ru.nesterov.bot.dto.GetClientStatisticResponse;
import ru.nesterov.bot.handlers.abstractions.StatefulCommandHandler;
import ru.nesterov.bot.handlers.callback.ButtonCallback;
import ru.nesterov.bot.statemachine.dto.Action;
import ru.nesterov.bot.utils.TelegramUpdateUtils;

import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.List;
import java.util.Locale;

@Component
public class GetClientStatisticHandler extends StatefulCommandHandler<State, GetClientStatisticRequest> {
    public GetClientStatisticHandler() {
        super(State.STARTED, GetClientStatisticRequest.class);
    }

    @Override
    public void initTransitions() {
        stateMachineProvider
                .addTransition(State.STARTED, Action.COMMAND_INPUT, State.SELECT_CLIENT, this::sendClientNamesKeyboard)

                .addTransition(State.SELECT_CLIENT, Action.ANY_CALLBACK_INPUT, State.FINISH, this::handleClientName);
    }

    @Override
    public String getCommand() {
        return "–£–∑–Ω–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –∫–ª–∏–µ–Ω—Ç—É";
    }

    @SneakyThrows
    private BotApiMethod<?> handleClientName(Update update) {
        long userId = update.getCallbackQuery().getFrom().getId();
        ButtonCallback buttonCallback = buttonCallbackService.buildButtonCallback(update.getCallbackQuery().getData());
         GetClientStatisticResponse response = client.getClientStatistic(userId, buttonCallback.getValue());

        return editMessage(
                TelegramUpdateUtils.getChatId(update),
                TelegramUpdateUtils.getMessageId(update),
                formatIncomeReport(response),
                null
        );
    }

    @SneakyThrows
    private BotApiMethod<?> sendClientNamesKeyboard(Update update) {
        InlineKeyboardMarkup keyboardMarkup = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> keyboard = new ArrayList<>();
        List<GetActiveClientResponse> clients = client.getActiveClients(TelegramUpdateUtils.getUserId(update));

        if (clients.isEmpty()) {
            return getPlainSendMessage(TelegramUpdateUtils.getChatId(update), "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤");
        }

        clients.sort(Comparator.comparing(GetActiveClientResponse::getName, String.CASE_INSENSITIVE_ORDER));

        for (GetActiveClientResponse response : clients) {
            InlineKeyboardButton button = new InlineKeyboardButton();
            button.setText(response.getName());
            ButtonCallback callback = new ButtonCallback();
            callback.setCommand(getCommand());
            callback.setValue(response.getName());
            button.setCallbackData(buttonCallbackService.getTelegramButtonCallbackString(callback));

            List<InlineKeyboardButton> rowInline = new ArrayList<>();
            rowInline.add(button);
            keyboard.add(rowInline);
        }
        keyboardMarkup.setKeyboard(keyboard);

        return getReplyKeyboard(TelegramUpdateUtils.getChatId(update), "–í—ã–±–µ—Ä–∏—Ç–µ –∫–ª–∏–µ–Ω—Ç–∞, —á—å—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å:", keyboardMarkup);
    }

    private static String formatIncomeReport(GetClientStatisticResponse response) {
        NumberFormat currencyFormat = NumberFormat.getNumberInstance(new Locale("ru", "RU"));
        currencyFormat.setMinimumFractionDigits(0);
        currencyFormat.setMaximumFractionDigits(0);

        SimpleDateFormat dateFormat = new SimpleDateFormat("dd.MM.yyyy", new Locale("ru", "RU"));

        return String.format(
                "üìä *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–ª–∏–µ–Ω—Ç–∞*\n\n" +
                        "%-35s %s\n" +
                        "%-35s %s\n" +
                        "%-35s %s\n" +
                        "-------------------------------------------\n" +
                        "%-35s %s\n" +
                        "%-35s %s\n" +
                        "%-35s %s\n" +
                        "-------------------------------------------\n" +
                        "%-35s %s —á–∞—Å–æ–≤\n" +
                        "%-35s %s —á–∞—Å–æ–≤\n" +
                        "%-35s %s ‚ÇΩ/—á–∞—Å\n" +
                        "%-35s %s\n" +
                        "%-35s %s\n" +
                        "%-35s %s\n" +
                        "-------------------------------------------\n" +
                        "%-35s %s ‚ÇΩ",

                "–ò–º—è:", response.getName(),
                "ID:", (response.getId()),
                "–¢–µ–ª–µ—Ñ–æ–Ω:", response.getPhone(),

                "–û–ø–∏—Å–∞–Ω–∏–µ:", response.getDescription(),
                "–ù–∞—á–∞–ª–æ –æ–±—É—á–µ–Ω–∏—è:", dateFormat.format(response.getStartDate()),
                "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –æ–±—É—á–µ–Ω–∏—è:", response.getServiceDuration() + " –¥–Ω–µ–π",

                "–°–æ—Å—Ç–æ—è–≤—à–∏—Ö—Å—è –∑–∞–Ω—è—Ç–∏–π –≤ —á–∞—Å–∞—Ö:", currencyFormat.format(response.getSuccessfulMeetingsHours()),
                "–û—Ç–º–µ–Ω–µ–Ω–Ω—ã—Ö –∑–∞–Ω—è—Ç–∏–π –≤ —á–∞—Å–∞—Ö:", currencyFormat.format(response.getCancelledMeetingsHours()),
                "–î–æ—Ö–æ–¥ –≤ —á–∞—Å:", currencyFormat.format(response.getIncomePerHour()),
                "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—Å—Ç–æ—è–≤—à–∏—Ö—Å—è –∑–∞–Ω—è—Ç–∏–π:", currencyFormat.format(response.getSuccessfulEventsCount()),
                "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–Ω—ã—Ö –∑–∞–Ω—è—Ç–∏–π:", currencyFormat.format(response.getPlannedCancelledEventsCount()),
                "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–Ω—ã—Ö –∑–∞–Ω—è—Ç–∏–π:", currencyFormat.format(response.getNotPlannedCancelledEventsCount()),

                "–°—É–º–º–∞—Ä–Ω—ã–π –¥–æ—Ö–æ–¥:", currencyFormat.format(response.getTotalIncome())
        );
    }
}
